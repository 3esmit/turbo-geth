// Code generated by protoc-gen-go. DO NOT EDIT.
// source: remote/txpool.proto

package remote

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TxRequest struct {
	Signedtx             []byte   `protobuf:"bytes,1,opt,name=signedtx,proto3" json:"signedtx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxRequest) Reset()         { *m = TxRequest{} }
func (m *TxRequest) String() string { return proto.CompactTextString(m) }
func (*TxRequest) ProtoMessage()    {}
func (*TxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2285178cfdb0411b, []int{0}
}

func (m *TxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxRequest.Unmarshal(m, b)
}
func (m *TxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxRequest.Marshal(b, m, deterministic)
}
func (m *TxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxRequest.Merge(m, src)
}
func (m *TxRequest) XXX_Size() int {
	return xxx_messageInfo_TxRequest.Size(m)
}
func (m *TxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TxRequest proto.InternalMessageInfo

func (m *TxRequest) GetSignedtx() []byte {
	if m != nil {
		return m.Signedtx
	}
	return nil
}

type AddReply struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddReply) Reset()         { *m = AddReply{} }
func (m *AddReply) String() string { return proto.CompactTextString(m) }
func (*AddReply) ProtoMessage()    {}
func (*AddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2285178cfdb0411b, []int{1}
}

func (m *AddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReply.Unmarshal(m, b)
}
func (m *AddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReply.Marshal(b, m, deterministic)
}
func (m *AddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReply.Merge(m, src)
}
func (m *AddReply) XXX_Size() int {
	return xxx_messageInfo_AddReply.Size(m)
}
func (m *AddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddReply proto.InternalMessageInfo

func (m *AddReply) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func init() {
	proto.RegisterType((*TxRequest)(nil), "remote.TxRequest")
	proto.RegisterType((*AddReply)(nil), "remote.AddReply")
}

func init() { proto.RegisterFile("remote/txpool.proto", fileDescriptor_2285178cfdb0411b) }

var fileDescriptor_2285178cfdb0411b = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x4a, 0xcd, 0xcd,
	0x2f, 0x49, 0xd5, 0x2f, 0xa9, 0x28, 0xc8, 0xcf, 0xcf, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x83, 0x08, 0x2a, 0xa9, 0x73, 0x71, 0x86, 0x54, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97,
	0x08, 0x49, 0x71, 0x71, 0x14, 0x67, 0xa6, 0xe7, 0xa5, 0xa6, 0x94, 0x54, 0x48, 0x30, 0x2a, 0x30,
	0x6a, 0xf0, 0x04, 0xc1, 0xf9, 0x4a, 0x72, 0x5c, 0x1c, 0x8e, 0x29, 0x29, 0x41, 0xa9, 0x05, 0x39,
	0x95, 0x42, 0x42, 0x5c, 0x2c, 0x19, 0x89, 0xc5, 0x19, 0x50, 0x35, 0x60, 0xb6, 0x91, 0x09, 0x17,
	0x5b, 0x48, 0x44, 0x80, 0xbf, 0xbf, 0x8f, 0x90, 0x16, 0x17, 0xb3, 0x63, 0x4a, 0x8a, 0x90, 0xa0,
	0x1e, 0xc4, 0x0a, 0x3d, 0xb8, 0xf9, 0x52, 0x02, 0x30, 0x21, 0x98, 0x49, 0x4e, 0xba, 0x5c, 0x02,
	0x99, 0xf9, 0x7a, 0x25, 0xa5, 0x45, 0x49, 0xf9, 0xba, 0xe9, 0xa9, 0x25, 0x19, 0x7a, 0x29, 0x49,
	0x4e, 0x50, 0x73, 0x02, 0x18, 0xa3, 0xf8, 0xf5, 0xf4, 0x21, 0x1a, 0xac, 0x21, 0x54, 0x12, 0x1b,
	0xd8, 0xf1, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x33, 0x92, 0x57, 0x9f, 0xd3, 0x00, 0x00,
	0x00,
}
